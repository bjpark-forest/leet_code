# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def findTilt(self, root: Optional[TreeNode]) -> int:
        if (root == []) or (root==None) :
            return 0
        def nodeSum(node) :
            l_sum,r_sum,l_tilt_sum,r_tilt_sum = 0,0,0,0
            if node.left != None :
                l_sum,l_tilt_sum=nodeSum(node.left)
            if node.right != None :
                r_sum,r_tilt_sum=nodeSum(node.right)
            # print(node.val,abs(l_sum-r_sum))
            return l_sum+r_sum+node.val,abs(l_sum-r_sum)+l_tilt_sum+r_tilt_sum
        _,tiltSum=nodeSum(root)
        return tiltSum
