# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def isPalindrome(self, head) -> bool:
        history=[]
        while head!=None :
            history.append(head.val)
            head=head.next
        if len(history)<=1 :
            return True
        if len(history)%2 :
            front = history[:len(history)//2]
            rear = history[len(history)//2+1:]
        else :
            front = history[:len(history)//2]
            rear = history[len(history)//2:]
        rear.reverse()
        return front == rear
